Problem 136 - Single Number

Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,1]
Output: 1
Example 2:

Input: nums = [4,1,2,1,2]
Output: 4
Example 3:

Input: nums = [1]
Output: 1
 

Constraints:

1 <= nums.length <= 3 * 10^4
-3 * 104 <= nums[i] <= 3 * 10^4
Each element in the array appears twice except for one element which appears only once.

-----------------------------------------------Solution-----------------------------------------------------

class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        l = [[1],[1,1]]
        for i in range(2,rowIndex+1):
            k = []
            for  j in range(i+1):
                if j == 0 or j == i:
                    k.append(1)
                else:
                    k.append(l[i-1][j-1]+l[i-1][j])
            l.append(k)
        return l[rowIndex]